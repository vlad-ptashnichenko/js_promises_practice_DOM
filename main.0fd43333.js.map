{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","div","createElement","dataset","qa","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","then","result","textContent","className","append","cloneNode","catch","secondPromise","e","preventDefault","thirdPromise"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAC9BC,EAAMF,SAASG,cAAc,OAEnCD,EAAIE,QAAQC,GAAK,eAEjB,IAAMC,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCV,EAAKW,iBAAiB,QAAS,WAC7BF,EAAQ,gCAGVG,WAAW,WAAMF,OAAAA,EAAOG,MAAM,gCAAgC,OAGhEN,EACGO,KAAK,SAAAC,GACJZ,EAAIa,YAAcD,EAClBZ,EAAIc,UAAY,UAChBjB,EAAKkB,OAAOf,EAAIgB,WAAU,MAE3BC,MAAM,SAAAL,GACLZ,EAAIa,YAAcD,EAClBZ,EAAIc,UAAY,UAChBjB,EAAKkB,OAAOf,EAAIgB,WAAU,MAG9B,IAAME,EAAgB,IAAIb,QAAQ,SAACC,GACjCT,EAAKW,iBAAiB,QAAS,WAC7BF,EAAQ,iCAGVT,EAAKW,iBAAiB,cAAe,SAACW,GACpCA,EAAEC,iBACFd,EAAQ,mCAIZY,EACGP,KAAK,SAAAC,GACJZ,EAAIa,YAAcD,EAClBZ,EAAIc,UAAY,UAChBjB,EAAKkB,OAAOf,EAAIgB,WAAU,MAG9B,IAAMK,EAAe,IAAIhB,QAAQ,SAACC,GAChCT,EAAKW,iBAAiB,QAAS,WAC7BX,EAAKW,iBAAiB,cAAe,SAACW,GACpCA,EAAEC,iBACFd,EAAQ,kCAIZT,EAAKW,iBAAiB,cAAe,SAACW,GACpCA,EAAEC,iBAEFvB,EAAKW,iBAAiB,QAAS,WAC7BF,EAAQ,oCAKde,EACGV,KAAK,SAAAC,GACJZ,EAAIa,YAAcD,EAClBZ,EAAIc,UAAY,UAChBjB,EAAKkB,OAAOf,EAAIgB,WAAU","file":"main.0fd43333.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst div = document.createElement('div');\n\ndiv.dataset.qa = 'notification';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => reject(Error('First promise was rejected')), 3000);\n});\n\nfirstPromise\n  .then(result => {\n    div.textContent = result;\n    div.className = 'success';\n    body.append(div.cloneNode(true));\n  })\n  .catch(result => {\n    div.textContent = result;\n    div.className = 'warning';\n    body.append(div.cloneNode(true));\n  });\n\nconst secondPromise = new Promise((resolve) => {\n  body.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  body.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    resolve('Second promise was resolved');\n  });\n});\n\nsecondPromise\n  .then(result => {\n    div.textContent = result;\n    div.className = 'success';\n    body.append(div.cloneNode(true));\n  });\n\nconst thirdPromise = new Promise((resolve) => {\n  body.addEventListener('click', () => {\n    body.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      resolve('Third promise was resolved');\n    });\n  });\n\n  body.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n\n    body.addEventListener('click', () => {\n      resolve('Third promise was resolved');\n    });\n  });\n});\n\nthirdPromise\n  .then(result => {\n    div.textContent = result;\n    div.className = 'success';\n    body.append(div.cloneNode(true));\n  });\n"]}